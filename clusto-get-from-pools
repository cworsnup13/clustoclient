#!/usr/bin/python

import argparse

import clustohttp
from IPy import IP


def get_valid_ips(host, excluded):
    ips = host.attr_values(key='ip', subkey='ipstring')
    ips = [IP(x) for x in ips]
    for subnet in excluded:
        for ip in ips:
            if not ip in subnet:
                yield ip
    return


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-t', '--clusto-type', action='append', default=[], choices=('server', 'datacenter', 'pool'))
    parser.add_argument('-i', '--ip', action='store_true', help='Return IPs instead of names')
    parser.add_argument('-e', '--exclude', action='append', default=[], help='IP subnets to exclude')
    parser.add_argument('pools', nargs='+', help='Pools to select from')
    args = parser.parse_args()

    proxy = clustohttp.ClustoProxy()
    kwargs = {}
    if args.clusto_type:
        kwargs['clusto_types'] = args.clusto_type

    excluded_subnets = [IP(x) for x in args.exclude]

    for host in sorted(proxy.get_from_pools(args.pools)):
        if args.ip:
            ips = list(get_valid_ips(host, excluded_subnets))
            if ips:
                print ips[0]
        else:
            print host.name


if __name__ == '__main__':
    main()
